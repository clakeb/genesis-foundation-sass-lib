@import "../../foundation/scss/foundation/components/grid";

$fluid-static-grid: true !default;

body { position: static; }

.site-container > * {
    & > .wrap {
        @include grid-row();
        margin: 0 auto;

        @if $fluid-static-grid {
            @media #{$small-up} {
                max-width: none;
            }

            @media #{$medium-up} {
                max-width: lower-bound($medium-range);
            }

            @media #{$large-up} {
                max-width: lower-bound($large-range);
            }

            @media #{$xlarge-up} {
                max-width: lower-bound($xlarge-range);
            }

            @media #{$xxlarge-up} {
                max-width: lower-bound($xxlarge-range);
            }
        }

        .row,
        .wrap {
            @include grid-row(nest);

            &.collapse {
                @include grid-row(nest-collapse);
            }
        }

        .vc_row, .wpb_row {
            &.contain, & > .row, & > .wrap {
                @include grid-row();
                margin: 0 auto;

                @if $fluid-static-grid {
                    @media #{$small-up} {
                        max-width: none;
                    }

                    @media #{$medium-up} {
                        max-width: lower-bound($medium-range);
                    }

                    @media #{$large-up} {
                        max-width: lower-bound($large-range);
                    }

                    @media #{$xlarge-up} {
                        max-width: lower-bound($xlarge-range);
                    }

                    @media #{$xxlarge-up} {
                        max-width: lower-bound($xxlarge-range);
                    }
                }
            }

            &.collapse {
                & > .row, & > .wrap {
                    @include grid-row(nest-collapse);
                }
            }
        }

        .flex-video, .vc_row, .wpb_row, .wpb_content_element {
            margin-bottom: 0;
        }

        .minus-gutter {
            margin-left: (-($column-gutter / 2));
            margin-right: (-($column-gutter / 2));
        }
    }
}

.full-width-content {

    .site-inner > .wrap {
        max-width: none;
    }

    .content > .loop > .entry > .wrap > .entry-header {
        @include grid-row();
        float: none;
        margin: 0 auto;

        @if $fluid-static-grid {
            @media #{$small-up} {
                max-width: none;
            }

            @media #{$medium-up} {
                max-width: lower-bound($medium-range);
            }

            @media #{$large-up} {
                max-width: lower-bound($large-range);
            }

            @media #{$xlarge-up} {
                max-width: lower-bound($xlarge-range);
            }

            @media #{$xxlarge-up} {
                max-width: lower-bound($xxlarge-range);
            }
        }
    }

    .content-sidebar-wrap {
        @include grid-column($total-columns, $collapse:false);
    }

    .content {
        @include grid-column($total-columns, $collapse:false, $float:false);
    }
}

.sidebar-content,
.content-sidebar {
    .content-sidebar-wrap {
        @include grid-column($total-columns);
    }

    .content {
        position: relative;
        @include grid-column($total-columns, $float:false);
        @media #{$medium-up} {
            @include grid-column((2/3) * $total-columns, $float:false);
        }
    }

    .sidebar {
        position: relative;
        @include grid-column($total-columns, $float:false);
        @media #{$medium-up} {
            @include grid-column((1/3) * $total-columns, $float:false);
        }
    }
}

.content-sidebar {
    .content {
        float: $default-float;
    }

    .sidebar {
        float: $opposite-direction;
    }
}

.sidebar-content {
    .content {
        float: $opposite-direction;
    }

    .sidebar {
        float: $default-float;
    }
}

.content-sidebar-sidebar,
.sidebar-content-sidebar,
.sidebar-sidebar-content {
    .content-sidebar-wrap {
        @include grid-column((4/5) * $total-columns);

        .content {
            @include grid-column((4/5) * $total-columns);
        }

        .sidebar {
            @include grid-column((1/5) * $total-columns);
        }
    }

    .sidebar {
        @include grid-column((1/5) * $total-columns);
    }

}

.content-sidebar-sidebar {
    .content-sidebar-wrap {
        float: $default-float;

        .content {
            float: $default-float;
        }

        .sidebar {
            float: $opposite-direction;
        }
    }

    .sidebar {
        float: $opposite-direction;
    }
}

.sidebar-content-sidebar {
    .content-sidebar-wrap {
        float: $opposite-direction;

        .content {
            float: $default-float;
        }

        .sidebar {
            float: $opposite-direction;
        }
    }

    .sidebar {
        float: $default-float;
    }
}

.sidebar-sidebar-content {
    .content-sidebar-wrap {
        float: $opposite-direction;

        .content {
            float: $opposite-direction;
        }

        .sidebar {
            float: $default-float;
        }
    }

    .sidebar {
        float: $default-float;
    }
}

.gap {
    @include clearfix;
    display: block;
    width: 100%;
    height: 1px;

    @for $i from 1 through 5 {
        &.small-#{$i} {
            @media #{$small-up} {
                padding-top: $i * ($column-gutter/2);
                padding-bottom: $i * ($column-gutter/2);
            }
        }
        &.medium-#{$i} {
            @media #{$medium-up} {
                padding-top: $i * ($column-gutter/2);
                padding-bottom: $i * ($column-gutter/2);
            }
        }
        &.large-#{$i} {
            @media #{$large-up} {
                padding-top: $i * ($column-gutter/2);
                padding-bottom: $i * ($column-gutter/2);
            }
        }
    }
}

@mixin vc-grid-html-classes($size) {
    .wpb_column { @include grid-column($columns:$total-columns); }

    @for $i from 1 through 12 {
        .site-container .vc_col-#{$size}-#{$i} { @include grid-column($columns:$i,$collapse:null,$float:false); }
    }

    @for $i from 0 through 12 - 1 {
        .site-container .vc_col-#{$size}-offset-#{$i} { @include grid-column($offset:$i, $collapse:null,$float:false); }
    }
}

@media #{$small-up} {
    @include vc-grid-html-classes($size:xs);
}

@media #{$medium-up} {
    @include vc-grid-html-classes($size:sm);
}

@media #{$large-up} {
    @include vc-grid-html-classes($size:md);
}

@media #{$xlarge-up} {
    @include vc-grid-html-classes($size:lg);
}

